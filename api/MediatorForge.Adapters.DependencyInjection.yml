### YamlMime:ManagedReference
items:
- uid: MediatorForge.Adapters.DependencyInjection
  commentId: T:MediatorForge.Adapters.DependencyInjection
  id: DependencyInjection
  parent: MediatorForge.Adapters
  children:
  - MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  langs:
  - csharp
  - vb
  name: DependencyInjection
  nameWithType: DependencyInjection
  fullName: MediatorForge.Adapters.DependencyInjection
  type: Class
  source:
    remote:
      path: src/MediatorForge.Adapters/DependencyInjection.cs
      branch: main
      repo: https://github.com/VikashChauhan51/mediator-forge.git
    id: DependencyInjection
    path: src/MediatorForge.Adapters/DependencyInjection.cs
    startLine: 8
  assemblies:
  - MediatorForge.Adapters
  namespace: MediatorForge.Adapters
  summary: "\nProvides extension methods for configuring MediatorForge adapters.\n"
  example: []
  syntax:
    content: public static class DependencyInjection
    content.vb: Public Module DependencyInjection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  commentId: M:MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  id: AddMediatorForgeFluentValidatorAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  isExtensionMethod: true
  parent: MediatorForge.Adapters.DependencyInjection
  langs:
  - csharp
  - vb
  name: AddMediatorForgeFluentValidatorAdapter(IServiceCollection)
  nameWithType: DependencyInjection.AddMediatorForgeFluentValidatorAdapter(IServiceCollection)
  fullName: MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  type: Method
  source:
    remote:
      path: src/MediatorForge.Adapters/DependencyInjection.cs
      branch: main
      repo: https://github.com/VikashChauhan51/mediator-forge.git
    id: AddMediatorForgeFluentValidatorAdapter
    path: src/MediatorForge.Adapters/DependencyInjection.cs
    startLine: 15
  assemblies:
  - MediatorForge.Adapters
  namespace: MediatorForge.Adapters
  summary: "\nAdds and configures the MediatorForge <xref href=\"MediatorForge.Adapters.FluentValidatorAdapter%601\" data-throw-if-not-resolved=\"false\"></xref> to the specified <xref href=\"Microsoft.Extensions.DependencyInjection.IServiceCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static IServiceCollection AddMediatorForgeFluentValidatorAdapter(this IServiceCollection services)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> to add the services to.
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: The <xref href="Microsoft.Extensions.DependencyInjection.IServiceCollection" data-throw-if-not-resolved="false"></xref> so that additional calls can be chained.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddMediatorForgeFluentValidatorAdapter(services As IServiceCollection) As IServiceCollection
  overload: MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MediatorForge.Adapters
  commentId: N:MediatorForge.Adapters
  name: MediatorForge.Adapters
  nameWithType: MediatorForge.Adapters
  fullName: MediatorForge.Adapters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: MediatorForge.Adapters.FluentValidatorAdapter`1
  commentId: T:MediatorForge.Adapters.FluentValidatorAdapter`1
  name: FluentValidatorAdapter<TRequest>
  nameWithType: FluentValidatorAdapter<TRequest>
  fullName: MediatorForge.Adapters.FluentValidatorAdapter<TRequest>
  nameWithType.vb: FluentValidatorAdapter(Of TRequest)
  fullName.vb: MediatorForge.Adapters.FluentValidatorAdapter(Of TRequest)
  name.vb: FluentValidatorAdapter(Of TRequest)
  spec.csharp:
  - uid: MediatorForge.Adapters.FluentValidatorAdapter`1
    name: FluentValidatorAdapter
    nameWithType: FluentValidatorAdapter
    fullName: MediatorForge.Adapters.FluentValidatorAdapter
  - name: <
    nameWithType: <
    fullName: <
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: MediatorForge.Adapters.FluentValidatorAdapter`1
    name: FluentValidatorAdapter
    nameWithType: FluentValidatorAdapter
    fullName: MediatorForge.Adapters.FluentValidatorAdapter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TRequest
    nameWithType: TRequest
    fullName: TRequest
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter*
  commentId: Overload:MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter
  name: AddMediatorForgeFluentValidatorAdapter
  nameWithType: DependencyInjection.AddMediatorForgeFluentValidatorAdapter
  fullName: MediatorForge.Adapters.DependencyInjection.AddMediatorForgeFluentValidatorAdapter
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
